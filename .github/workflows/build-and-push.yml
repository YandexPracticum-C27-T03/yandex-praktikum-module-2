# Определяем название процесса (просто отображается на странице Actions в GitHub)
name: Push To Yandex Cloud CR

# Определяем условия запуска процесса
# Подробнее см. https://docs.github.com/en/actions/using-workflows/events-that-trigger-workflows)
on:
  # Позволяет запускать при push в main (и при commit и при merge)
  push:
    branches:
      - main
      - feature/pap-63

  # Позволяет запускать вручную из GitHub
  workflow_dispatch:

jobs:
  build-and-push:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: set lower case owner name
        run: |
          echo "OWNER_LC=${OWNER,,}" >>${GITHUB_ENV}
        env:
          OWNER: '${{ github.repository_owner }}'
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push prod image
        uses: docker/build-push-action@v2
        with:
          context: .
          file: Dockerfile.prod
          push: true
          tags: ghcr.io/${{ env.OWNER_LC }}/${{ github.event.repository.name }}/prod:${{ github.sha }}
#      - name: Deploy to remote server
#        uses: appleboy/ssh-action@master
#        with:
#          host: ${{ secrets.SSH_DEPLOY_IP }}
#          username: ${{ secrets.SSH_DEPLOY_USER }}
#          key: ${{ secrets.SSH_DEPLOY_CERT }}
#          passphrase: ${{ secrets.SSH_DEPLOY_CERT_PASSPHRASE}}
#          script: |
#            # Остановка и удаление текущих контейнеров (если нужно)
#            docker stop papprika-prakticum-server || true
#
#            docker rm papprika-prakticum-server || true
#
#            # Запуск нового контейнера с использованием обновленного образа
#            docker run -d --name papprika-prakticum-server ghcr.io/${{ env.OWNER_LC }}/${{ github.event.repository.name }}/prod:${{ github.sha }}
